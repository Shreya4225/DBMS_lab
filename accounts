create database practical
use practical;

CREATE TABLE branch (
    branch_name VARCHAR(50) PRIMARY KEY,
    branch_city VARCHAR(50) NOT NULL,
    assets_amt DECIMAL(10, 2) NOT NULL
);

CREATE TABLE customer (
    cust_name VARCHAR(50) PRIMARY KEY,
    cust_street VARCHAR(100),
    cust_city VARCHAR(50)
);

CREATE TABLE account (
    Acc_no INT PRIMARY KEY,
    branch_name VARCHAR(50) REFERENCES branch(branch_name),
    balance DECIMAL(10, 2) NOT NULL,
    CHECK (balance >= 0)
);

CREATE TABLE depositor (
    cust_name VARCHAR(50) REFERENCES customer(cust_name),
    acc_no INT REFERENCES account(Acc_no),
    PRIMARY KEY (cust_name, acc_no)
);

CREATE TABLE loan (
    Acc_no INT,
    loan_no INT PRIMARY KEY,
    branch_name VARCHAR(50) REFERENCES branch(branch_name),
    amount DECIMAL(10, 2) NOT NULL,
    CHECK (amount > 0)
);

CREATE TABLE borrower (
    cust_name VARCHAR(50) REFERENCES customer(cust_name),
    loan_no INT REFERENCES loan(loan_no),
    PRIMARY KEY (cust_name, loan_no)
);


INSERT INTO branch (branch_name, branch_city, assets_amt)
VALUES
    ('Pimpri', 'Pune', 1000000),
    ('Akurdi', 'Pune', 800000),
    ('Chinchwad', 'Pune', 1200000);

INSERT INTO customer (cust_name, cust_street, cust_city)
VALUES
    ('shreya', 'Main_st', 'Pune'),
    ('siddhi', 'Part_St', 'Pune'),
    ('anushka', 'Fly_St', 'Pune');

INSERT INTO Account (Acc_no, branch_name, balance)
VALUES
    (101, 'Pimpri', 15000),
    (102, 'Akurdi', 20000),
    (103, 'Chinchwad', 25000);

INSERT INTO Depositor (cust_name, acc_no)
VALUES
    ('shreya', 101),
    ('siddhi', 102),
    ('anushka', 103);

INSERT INTO Loan (Acc_no, loan_no, branch_name, amount)
VALUES
    (101, 1001, 'Pimpri', 15000),
    (102, 1002, 'Akurdi', 22000),
    (103, 1003, 'Chinchwad', 18000);

INSERT INTO Borrower (cust_name, loan_no)
VALUES
    ('shreya', 1001),
    ('siddhi', 1002),
    ('anushka', 1003);

2. Find the names of all branches in loan relation.
   SELECT DISTINCT branch_name FROM loan;

3. Find all loan numbers for loans made at Pimpri Branch with loan amount &gt; 12000.
   SELECT loan_no
   FROM loan
   WHERE branch_name = 'Pimpri' AND amount > 12000;

4. Find all customers who have a loan from bank. Find their names, loan_no and loan
   amount.
   SELECT c.cust_name, l.loan_no, l.amount
   FROM customer c
   JOIN borrower b ON c.cust_name = b.cust_name
   JOIN loan l ON b.loan_no = l.loan_no;

5. List all customers in alphabetical order who have loan from Akurdi branch.
   SELECT c.cust_name
   FROM customer c
   JOIN borrower b ON c.cust_name = b.cust_name
   JOIN loan l ON b.loan_no = l.loan_no
   WHERE l.branch_name = 'Akurdi'
   ORDER BY c.cust_name;

6. Find all customers who have an account or loan or both at bank.
   SELECT DISTINCT cust_name
   FROM (
    SELECT cust_name FROM account
    UNION
    SELECT cust_name FROM borrower
    ) AS all_customers;

7. Find all customers who have both account and loan at bank.
   SELECT DISTINCT c.cust_name
   FROM customer c
   LEFT JOIN Depositor d ON c.cust_name = d.cust_name
   LEFT JOIN Borrower b ON c.cust_name = b.cust_name
   WHERE d.cust_name IS NOT NULL OR b.cust_name IS NOT NULL;

8. Find average account balance at Pimpri branch.
   SELECT AVG(balance) AS avg_balance
   FROM account
   WHERE branch_name = 'Pimpri';

9. Find the average account balance at each branch
   SELECT branch_name, AVG(balance) AS avg_balance
   FROM account
   GROUP BY branch_name;

10. Find the branches where average account balance &gt; 12000.
    SELECT branch_name
    FROM (
    SELECT branch_name, AVG(balance) AS avg_balance
    FROM account
    GROUP BY branch_name
    ) AS branch_avg
    WHERE avg_balance > 12000;

11. Calculate total loan amount given by bank.
    SELECT SUM(amount) AS total_loan_amount
    FROM loan;
